// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime
  updatedAt   DateTime
  Profile     Profile?
  Transaction Transaction[]
}

model Profile {
  id             Int      @id @default(autoincrement())
  identityNumber BigInt
  address        String
  user           User     @relation(fields: [userId], references: [id])
  userId         Int      @unique
  createdAt      DateTime
  updatedAt      DateTime
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime
  updatedAt DateTime
  Type      Type[]
}

model Type {
  id              Int               @id @default(autoincrement())
  name            String
  price           Int
  quantity        Int
  brand           Brand             @relation(fields: [brandId], references: [id])
  brandId         Int
  ItemTransaction ItemTransaction[]
}

model Voucher {
  id          Int           @id @default(autoincrement())
  code        String
  Transaction Transaction[]
}

model Transaction {
  id              Int               @id @default(autoincrement())
  user            User              @relation(fields: [userId], references: [id])
  userId          Int
  voucher         Voucher           @relation(fields: [voucherId], references: [id])
  voucherId       Int
  totalPrice      Int
  isPaid          Boolean
  createdAt       DateTime
  updatedAt       DateTime
  ItemTransaction ItemTransaction[]
}

model ItemTransaction {
  id            Int         @id @default(autoincrement())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  type          Type        @relation(fields: [brandTypeId], references: [id])
  brandTypeId   Int
  quantity      Int
}
